:root {
	//// Custom variable values only support SassScript inside `#{}`.
	//@each $color, $value in $colors {
	//  --#{$color}: #{$value};
	//}
	#each-color-css-var(@i: 1) when (@i =< length(@colors)) {
		@item: extract(@colors, @i);
		@color: extract(@item, 1);
		@value: extract(@item, 2);

		--@{color}: @value;

		#each-color-css-var((@i + 1));
	} #each-color-css-var();

	//@each $color, $value in $theme-colors {
	//  --#{$color}: #{$value};
	//}
	#each-theme-color-css-var(@i: 1) when (@i =< length(@theme-colors)) {
		@item: extract(@theme-colors, @i);
		@color: extract(@item, 1);
		@value: extract(@item, 2);

		--@{color}: @value;

		#each-theme-color-css-var((@i + 1));
	} #each-theme-color-css-var();

	//@each $bp, $value in $grid-breakpoints {
	//  --breakpoint-#{$bp}: #{$value};
	//}
	#each-breakpoint-css-var(@i: 1) when (@i =< length(@grid-breakpoints)) {
		@item: extract(@grid-breakpoints, @i);
		@bp: extract(@item, 1);
		@value: extract(@item, 2);

		--breakpoint-@{bp}: @value;

		#each-breakpoint-css-var((@i + 1));
	} #each-breakpoint-css-var();

	//// Use `inspect` for lists so that quoted items keep the quotes.
	//// See https://github.com/sass/sass/issues/2383#issuecomment-336349172
	//--font-family-sans-serif: #{inspect($font-family-sans-serif)};
	//--font-family-monospace: #{inspect($font-family-monospace)};
	--font-family-sans-serif: @font-family-sans-serif;
	--font-family-monospace: @font-family-monospace;
}
